package build

import mill._, kotlinlib._
import kotlinlib.contrib.kover.KoverModule

object `package` extends RootModule with KotlinModule with KoverModule {

  def kotlinVersion = "1.9.24"

  override def koverVersion = "0.8.3"

  object test extends KotlinModuleTests with TestModule.Junit5 with KoverTests {
    override def forkArgs: T[Seq[String]] = Task {
      super.forkArgs() ++ Seq("-Dkotest.framework.classpath.scanning.autoscan.disable=true")

    }
    override def ivyDeps = super.ivyDeps() ++ Agg(
      ivy"io.kotest:kotest-runner-junit5-jvm:5.9.1"
    )
  }
}

// This is a basic Mill build for a single `KotlinModule`, enhanced with
// Kover module. The root module extends the `KoverModule` and
// specifies the version of Kover version to use here: `0.8.3`. This
// version can be changed if there is a newer one. Now you can call the
// Kover targets to produce coverage reports.
// The sub test module extends `KoverTests` to transform the
// execution of the various testXXX targets to use Kover and produce
// coverage data.
// This lets us perform the coverage operations but before that you
// must first run the test.
// `./mill test` then `./mill show kover.htmlReport` and get your
// coverage in HTML format.

/** Usage

> ./mill test # Run the tests and produce the coverage data
...
... foo.FooTestskotlin - success started

> ./mill resolve kover._ # List what tasks are available to run from kover
...
kover.htmlReport
...
kover.xmlReport
...

> ./mill show kover.htmlReport
...
...out/kover/htmlReport.dest/kover-report...

> cat out/kover/htmlReport.dest/kover-report/index.html
...
...Kover HTML Report: Overall Coverage Summary...

*/
