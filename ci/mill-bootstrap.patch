# * We need to load a external plugins from another binary compatible slot
# * mima-plugin isn't available for 0.10 yet

diff --git a/build.sc b/build.sc
index 0ed661f1..e498db89 100755
--- a/build.sc
+++ b/build.sc
@@ -1,12 +1,12 @@
 import $file.ci.shared
 import $file.ci.upload
 import $ivy.`org.scalaj::scalaj-http:2.4.2`
-import $ivy.`de.tototec::de.tobiasroeser.mill.vcs.version_mill0.9:0.1.2`
-import $ivy.`com.github.lolgab::mill-mima_mill0.9:0.0.5`
+import $ivy.`de.tototec::de.tobiasroeser.mill.vcs.version_mill0.10.0-M2:0.1.2`
+// import $ivy.`com.github.lolgab::mill-mima_mill0.9:0.0.5`
 import $ivy.`net.sourceforge.htmlcleaner:htmlcleaner:2.24`
 import java.nio.file.attribute.PosixFilePermission
 
-import com.github.lolgab.mill.mima
+// import com.github.lolgab.mill.mima
 import coursier.maven.MavenRepository
 import de.tobiasroeser.mill.vcs.version.VcsVersion
 import mill._
@@ -168,17 +168,18 @@ trait MillApiModule
     extends MillPublishModule
     with ScalaModule
     with MillCoursierModule
-    with mima.Mima {
+//    with mima.Mima
+    {
   def scalaVersion = Deps.scalaVersion
   override def ammoniteVersion = Deps.ammonite.dep.version
-  override def mimaPreviousVersions: T[Seq[String]] = Settings.mimaBaseVersions
-  override def mimaPreviousArtifacts =
-    if (Settings.mimaBaseVersions.isEmpty) T { Agg[Dep]() }
-    else super.mimaPreviousArtifacts
-  override def mimaExcludeAnnotations: T[Seq[String]] = Seq(
-    "mill.api.internal",
-    "mill.api.experimental"
-  )
+//  override def mimaPreviousVersions: T[Seq[String]] = Settings.mimaBaseVersions
+//  override def mimaPreviousArtifacts =
+//    if (Settings.mimaBaseVersions.isEmpty) T { Agg[Dep]() }
+//    else super.mimaPreviousArtifacts
+//  override def mimaExcludeAnnotations: T[Seq[String]] = Seq(
+//    "mill.api.internal",
+//    "mill.api.experimental"
+//  )
 }
 
 trait MillModule extends MillApiModule { outer =>
